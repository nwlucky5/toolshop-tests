name: Playwright Tests
on:
 push:
   branches: [main, master]
 pull_request:
   branches: [main, master]

permissions:
    contents: read
    checks: write
    id-token: write

jobs:
 prepare-env:
  timeout-minutes: 5
  runs-on: ubuntu-latest
  env:
     BASE_URL: "https://practicesoftwaretesting.com"
     USER_EMAIL: ${{ secrets.USER_EMAIL }}
     USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
     ADMIN_USER_EMAIL: ${{ secrets.ADMIN_USER_EMAIL }}
     ADMIN_USER_PASSWORD: ${{ secrets.ADMIN_USER_PASSWORD }}
  steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: "npm"
        registry-url: "https://npm.pkg.github.com"
    - name: Get installed Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
    - name: Cache playwright binaries
      uses: actions/cache@v4.0.2
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps
         
 run-smoke-tests:
   needs: [prepare-env]
   timeout-minutes: 5
   runs-on: ubuntu-latest
   env:
        BASE_URL: "https://practicesoftwaretesting.com"
        USER_EMAIL: ${{ secrets.USER_EMAIL }}
        USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        ADMIN_USER_EMAIL: ${{ secrets.ADMIN_USER_EMAIL }}
        ADMIN_USER_PASSWORD: ${{ secrets.ADMIN_USER_PASSWORD }}
   steps:
     - uses: actions/checkout@v4
     - uses: actions/setup-node@v4
       with:
         node-version: 20
         cache: "npm"
         registry-url: "https://npm.pkg.github.com"
     - name: Get installed Playwright version
       id: playwright-version
       run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
     - name: Cache playwright binaries
       uses: actions/cache@v4.0.2
       id: playwright-cache
       with:
         path: |
           ~/.cache/ms-playwright
         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
     - name: Install dependencies
       run: npm ci
     - name: Run Playwright tests
       run: npx playwright test --grep @smoke
     - name: Archive tests results
       if: success() || failure()
       uses: actions/upload-artifact@v4
       with:
         name: test-report-smoke-tests
         path: |
            ./playwright-report/**/*.*
            ./test-results/**/*.*
 run-api-tests:
    needs: [prepare-env]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
         BASE_URL: "https://practicesoftwaretesting.com"
         USER_EMAIL: ${{ secrets.USER_EMAIL }}
         USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
         ADMIN_USER_EMAIL: ${{ secrets.ADMIN_USER_EMAIL }}
         ADMIN_USER_PASSWORD: ${{ secrets.ADMIN_USER_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v4.0.2
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Run Playwright tests
        run: npx playwright test --grep @api
      - name: Archive tests results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-api-tests
          path: |
             ./playwright-report/**/*.*
             ./test-results/**/*.*
